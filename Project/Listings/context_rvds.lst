


ARM Macro Assembler    Page 1 


    1 00000000         ;******************************************************
    2 00000000         ;       全局变量
    3 00000000         ;******************************************************
    4 00000000                 IMPORT           rt_thread_switch_interrupt_flag
    5 00000000                 IMPORT           rt_interrupt_from_thread
    6 00000000                 IMPORT           rt_interrupt_to_thread
    7 00000000         
    8 00000000         ;******************************************************
    9 00000000         ;      常量
   10 00000000         ;******************************************************
   11 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   12 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04
   13 00000000 E000ED20 
                       NVIC_SYSPRI2
                               EQU              0xE000ED20
   14 00000000 00FF0000 
                       NVIC_PENDSV_PRI
                               EQU              0x00FF0000
   15 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000
   16 00000000         
   17 00000000         ;******************************************************
   18 00000000         ;      代码产生指令
   19 00000000         ;******************************************************
   20 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   21 00000000                 THUMB
   22 00000000                 REQUIRE8
   23 00000000                 PRESERVE8
   24 00000000         
   25 00000000         ;*******************************************************
                       
   26 00000000         ;     第一次线程切换（手动指定）
   27 00000000         ;*******************************************************
                       
   28 00000000         rt_hw_context_switch_to
                               PROC
   29 00000000                 EXPORT           rt_hw_context_switch_to
   30 00000000         
   31 00000000         ;手动指定了第一个要运行的线程，因此 from_thread 被设置为
                       0
   32 00000000 4922            LDR              r1, = rt_interrupt_to_thread
   33 00000002 6008            STR              r0, [r1]
   34 00000004         
   35 00000004 4922            LDR              r1, = rt_interrupt_from_thread
   36 00000006 F04F 0000       MOV              r0, #0x0
   37 0000000A 6008            STR              r0, [r1]
   38 0000000C         
   39 0000000C 4921            LDR              r1, = rt_thread_switch_interrup
t_flag
   40 0000000E F04F 0001       MOV              r0, #1
   41 00000012 6008            STR              r0, [r1]
   42 00000014         
   43 00000014         ;设置PendSV异常的优先级



ARM Macro Assembler    Page 2 


   44 00000014 4820            LDR              r0, = NVIC_SYSPRI2
   45 00000016 F44F 017F       LDR              r1, = NVIC_PENDSV_PRI
   46 0000001A F8D0 2000       LDR.W            r2, [r0,#0x00]
   47 0000001E EA41 0102       ORR              r1,r1,r2
   48 00000022 6001            STR              r1, [r0]
   49 00000024         
   50 00000024         ;触发PendSV异常
   51 00000024 481D            LDR              r0, = NVIC_INT_CTRL
   52 00000026 F04F 5180       LDR              r1, = NVIC_PENDSVSET
   53 0000002A 6001            STR              r1, [r0]
   54 0000002C         
   55 0000002C B661            CPSIE            F
   56 0000002E B662            CPSIE            I
   57 00000030         
   58 00000030                 ENDP
   59 00000030         
   60 00000030         ;*******************************************************
                       
   61 00000030         ;      线程调度
   62 00000030         ;*******************************************************
                       
   63 00000030         rt_hw_context_switch
                               PROC
   64 00000030                 EXPORT           rt_hw_context_switch
   65 00000030         
   66 00000030 4A18            LDR              r2, = rt_thread_switch_interrup
t_flag
   67 00000032 6813            LDR              r3, [r2]
   68 00000034 2B01            CMP              r3, #1
   69 00000036 D004            BEQ              _reswitch
   70 00000038 F04F 0301       MOV              r3, #1      ;中断标识不为1则置1
                                                            
   71 0000003C 6013            STR              r3, [r2]
   72 0000003E         
   73 0000003E 4A14            LDR              r2, = rt_interrupt_from_thread
   74 00000040 6010            STR              r0, [r2]
   75 00000042         
   76 00000042         _reswitch
   77 00000042 4A12            LDR              r2, = rt_interrupt_to_thread
   78 00000044 6011            STR              r1, [r2]
   79 00000046         
   80 00000046 4815            LDR              r0, = NVIC_INT_CTRL
   81 00000048 F04F 5180       LDR              r1, = NVIC_PENDSVSET
   82 0000004C 6001            STR              r1, [r0]
   83 0000004E         
   84 0000004E 4770            BX               LR
   85 00000050         
   86 00000050                 ENDP
   87 00000050         
   88 00000050         ;*******************************************************
                       
   89 00000050         ;    PendSV异常处理（上下文切换）
   90 00000050         ;*******************************************************
                       
   91 00000050         
   92 00000050         PendSV_Handler
                               PROC
   93 00000050                 EXPORT           PendSV_Handler
   94 00000050         



ARM Macro Assembler    Page 3 


   95 00000050 F3EF 8210       MRS              r2, PRIMASK
   96 00000054 B672            CPSID            I
   97 00000056         
   98 00000056 480F            LDR              r0, = rt_thread_switch_interrup
t_flag
   99 00000058 6801            LDR              r1, [r0]
  100 0000005A B191            CBZ              r1, pendsv_exit ;如果中断标志为
                                                            0，则不进行切换
  101 0000005C         
  102 0000005C F04F 0100       MOV              r1, #0x00
  103 00000060 6001            STR              r1, [r0]
  104 00000062         
  105 00000062 480B            LDR              r0, = rt_interrupt_from_thread
  106 00000064 6801            LDR              r1, [r0]
  107 00000066 B129            CBZ              r1, switch_to_thread
  108 00000068         
  109 00000068 F3EF 8109       MRS              r1, psp
  110 0000006C E921 0FF0       STMFD            r1!,{r4 - r11}
  111 00000070 6800            LDR              r0, [r0]
  112 00000072 6001            STR              r1, [r0]
  113 00000074         
  114 00000074         switch_to_thread
  115 00000074 4905            LDR              r1, = rt_interrupt_to_thread
  116 00000076 6809            LDR              r1, [r1]
  117 00000078 6809            LDR              r1, [r1]
  118 0000007A         
  119 0000007A E8B1 0FF0       LDMFD            r1!,{r4 - r11}
  120 0000007E F381 8809       MSR              psp, r1
  121 00000082         
  122 00000082         pendsv_exit
  123 00000082 F382 8810       MSR              PRIMASK, r2
  124 00000086 F04E 0E04       ORR              lr, lr, #0x04
  125 0000008A 4770            BX               lr
  126 0000008C         
  127 0000008C                 ENDP
  128 0000008C         
  129 0000008C                 ALIGN            4
  130 0000008C         
  131 0000008C                 END
              00000000 
              00000000 
              00000000 
              E000ED20 
              E000ED04 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\context_rvds.d -o.\objects\context_rvds.o -I.\RTE\_Targe
t_1 -IC:\Users\Optimus\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Inclu
de -IC:\Users\Optimus\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\Device\ARM\ARMCM3
\Include --predefine="__UVISION_VERSION SETA 531" --predefine="_RTE_ SETA 1" --
predefine="ARMCM3 SETA 1" --predefine="_RTE_ SETA 1" --list=.\listings\context_
rvds.lst ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 20 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      None
Comment: .text unused
PendSV_Handler 00000050

Symbol: PendSV_Handler
   Definitions
      At line 92 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 93 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: PendSV_Handler used once
_reswitch 00000042

Symbol: _reswitch
   Definitions
      At line 76 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 69 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: _reswitch used once
pendsv_exit 00000082

Symbol: pendsv_exit
   Definitions
      At line 122 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 100 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: pendsv_exit used once
rt_hw_context_switch 00000030

Symbol: rt_hw_context_switch
   Definitions
      At line 63 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 64 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_context_switch used once
rt_hw_context_switch_to 00000000

Symbol: rt_hw_context_switch_to
   Definitions
      At line 28 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 29 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_context_switch_to used once
switch_to_thread 00000074

Symbol: switch_to_thread
   Definitions
      At line 114 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 107 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: switch_to_thread used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 12 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 51 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 80 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 15 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 52 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 81 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

NVIC_PENDSV_PRI 00FF0000

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 14 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 45 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED20

Symbol: NVIC_SYSPRI2
   Definitions
      At line 13 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 44 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: NVIC_SYSPRI2 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 11 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      None
Comment: SCB_VTOR unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 5 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 35 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 73 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 105 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 6 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 32 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 77 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 115 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 4 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 39 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 66 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 98 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

3 symbols
350 symbols in table
